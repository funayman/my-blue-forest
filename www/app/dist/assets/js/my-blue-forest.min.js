/*! my-blue-forest 2018-01-07 */

var app=angular.module("myBlueForest",["ui.router","ui.bootstrap","hc.marked","ngFlash","ngTagsInput","ngSanitize"]);app.run(["UserService",function(UserService){UserService.init()}]),app.config(function($stateProvider,$urlRouterProvider,$httpProvider){$httpProvider.defaults.withCredentials=!0;var isAuthorized=function(UserService,$q,$state,$timeout){return UserService.isAuthenticated().then(function(response){return response},function(){$timeout(function(){$state.go("login",{flashMessage:{style:"danger",msg:"You must be logged in to view this page"}},{reload:!0})})})};[{name:"index",url:"/",controller:"ViewPostsController as ctrl",templateUrl:"/components/view-posts.html",resolve:{posts:function(PostService){return PostService.getAll()},following:function(UserService){var fnEmpty=function(){return[]};return UserService.isAuthenticated().then(function(response){return UserService.getFollowedPosts().then(function(response){return response.data},fnEmpty)},fnEmpty).then(function(followedPosts){var ids=[];return followedPosts.forEach(function(p){ids.push(p.id)}),ids})},followingCount:function(PostService){return PostService.getFollowCount().then(function(response){return response.data})},likedPosts:function(UserService){return UserService.getLikedPostIDs().then(function(response){return response.data})},ratings:function(RatingService){return RatingService.getAll().then(function(response){return response.data})},title:function(){return"Most Recent Posts"},noPostMessage:function(){return"Uh oh no posts!"}},params:{flashMessage:null}},{name:"following",url:"/following",controller:"ViewPostsController as ctrl",templateUrl:"/components/view-posts.html",resolve:{auth:isAuthorized,posts:function(UserService){return UserService.getFollowedPosts().then(function(response){return response.data})},followingCount:function(PostService){return PostService.getFollowCount().then(function(response){return response.data})},following:function(UserService){return UserService.getFollowedPosts().then(function(response){return response.data},function(){return[]}).then(function(followedPosts){var ids=[];return followedPosts.forEach(function(p){ids.push(p.id)}),ids})},likedPosts:function(UserService){return UserService.getLikedPostIDs().then(function(response){return response.data})},ratings:function(RatingService){return RatingService.getAll().then(function(response){return response.data})},title:function(){return"Posts You Are Following"},noPostMessage:function(){return"You are currently not following any posts"}}},{name:"contribute",url:"/post/new",controller:"CreatePostController as ctrl",templateUrl:"/components/create-post.html",resolve:{auth:isAuthorized}},{name:"post",url:"/post/{pid}",controller:"ViewSinglePostController as ctrl",templateUrl:"/components/view-post.html",params:{flashMessage:null},resolve:{post:function(PostService,$transition$){return PostService.getPost($transition$.params().pid).then(function(response){return response.data})},comments:function(PostService,$transition$){return PostService.getComments($transition$.params().pid).then(function(response){return response.data})},isFollowing:function(PostService,$transition$){return PostService.isFollowing($transition$.params().pid).then(function(response){return response.data})},ratingData:function(RatingService,$transition$){return RatingService.getAverage($transition$.params().pid).then(function(response){return response.data})},doesLike:function(PostService,UserService,$transition$){var fnReturnFalse=function(response){return!1};return UserService.isAuthenticated().then(function(response){return PostService.doesLikePost($transition$.params().pid,UserService.getUsername())},fnReturnFalse).then(function(response){return response.data},fnReturnFalse)}}},{name:"postEdit",url:"/post/{pid}/edit",controller:"EditPostController as ctrl",templateUrl:"/components/create-post.html",resolve:{auth:isAuthorized,post:function(PostService,UserService,$transition$,$state,$timeout,$q){return PostService.getPost($transition$.params().pid).then(function(response){var p=response.data;if(p.owner.username===UserService.getUsername())return p;$timeout(function(){$state.go("index",{flashMessage:{style:"danger",msg:"You are not authorized to edit this post"}},{reload:!0})})})}}},{name:"tagPosts",url:"/tag/{name}",controller:"ViewPostsController as ctrl",templateUrl:"/components/view-posts.html",resolve:{posts:function(TagService,$transition$,$timeout,$state){return TagService.getPosts($transition$.params().name).then(function(response){return response.data},function(response){console.log(response),$timeout(function(){$state.go("index",{flashMessage:{style:"warning",msg:"tag ["+$transition$.params().name+"] does not exist"}},{reload:!0})})})},followingCount:function(PostService){return PostService.getFollowCount().then(function(response){return response.data})},following:function(UserService){var fnEmpty=function(){return[]};return UserService.isAuthenticated().then(function(response){return UserService.getFollowedPosts().then(function(response){return response.data},fnEmpty)},fnEmpty).then(function(followedPosts){var ids=[];return followedPosts.forEach(function(p){ids.push(p.id)}),ids})},likedPosts:function(UserService){return UserService.getLikedPostIDs().then(function(response){return response.data})},ratings:function(RatingService){return RatingService.getAll().then(function(response){return response.data})},title:function($transition$){return'Posts with "'+$transition$.params().name+'" tag'},noPostMessage:function(){return"There are currently no posts with that tag"}}},{name:"register",url:"/register",controller:"RegistrationController as ctrl",templateUrl:"/components/create-user.html"},{name:"login",url:"/login",controller:"LoginController as ctrl",templateUrl:"/components/login.html",params:{flashMessage:null}},{name:"logout",url:"/logout",resolve:{yaru:function(UserService,$state,$timeout){var f=function(data){UserService.setAuth(!1,null),$timeout(function(){$state.transitionTo("index",{flashMessage:{style:"success",msg:"You were successfully logged out"}},{reload:!0})})};return UserService.logout().then(f,f)}}},{name:"user",url:"/user/{username}",controller:"ViewUserController as ctrl",templateUrl:"/components/view-user.html",params:{flashMessage:null},resolve:{user:function($timeout,$transition$,$state,UserService){var username=$transition$.params().username;return UserService.getUser(username).then(function(response){return response.data},function(response){console.log(response),$timeout(function(){$state.transitionTo("index",{flashMessage:{style:"warning",msg:"That user does not exist"}},{reload:!0})})})},posts:function($transition$,UserService){var username=$transition$.params().username;return UserService.getPosts(username).then(function(response){return response.data},function(){return[]})}}},{name:"me",url:"/me",controller:"UpdateUserController as ctrl",templateUrl:"/components/update-user.html",params:{flashMessage:null},resolve:{auth:isAuthorized,user:function($transition$,$timeout,$state,UserService){return UserService.getMe().then(function(response){return response.data})},posts:function(UserService){return UserService.getPosts(UserService.getUsername()).then(function(response){return response.data},function(){return[]})}}}].forEach(function(state){$stateProvider.state(state)}),$urlRouterProvider.otherwise("/")}),app.directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var modelSetter=$parse(attrs.fileModel).assign;element.bind("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]),app.directive("pwCheck",[function(){return{require:"ngModel",link:function($scope,$element,$attrs,ctrl){var validate=function(viewValue){var comparisonModel=$attrs.pwCheck;return viewValue&&comparisonModel||ctrl.$setValidity("pwmatch",!0),ctrl.$setValidity("pwmatch",viewValue===comparisonModel),viewValue};ctrl.$parsers.unshift(validate),ctrl.$formatters.push(validate),$attrs.$observe("pwCheck",function(comparisonModel){return validate(ctrl.$viewValue)})}}}]),app.filter("titlecase",function(){return function(input){var smallWords=/^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i;return(input=input.toLowerCase()).replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g,function(match,index,title){return index>0&&index+match.length!==title.length&&match.search(smallWords)>-1&&":"!==title.charAt(index-2)&&("-"!==title.charAt(index+match.length)||"-"===title.charAt(index-1))&&title.charAt(index-1).search(/[^\s-]/)<0?match.toLowerCase():match.substr(1).search(/[A-Z]|\../)>-1?match:match.charAt(0).toUpperCase()+match.substr(1)})}}),app.filter("elapsed",function(){return function(timeOfThing){if(timeOfThing){var time=new Date(0);time.setMilliseconds(timeOfThing);var difference=(new Date).getTime()-time,seconds=Math.floor(difference/1e3),minutes=Math.floor(seconds/60),hours=Math.floor(minutes/60),days=Math.floor(hours/24);return days>1?days+" days ago":1==days?"1 day ago":hours>1?hours+" hours ago":1==hours?"an hour ago":minutes>1?minutes+" minutes ago":1==minutes?"a minute ago":"a few seconds ago"}}}),app.controller("ViewPostsController",function(Flash,$state,marked,PostService,UserService,posts,following,followingCount,likedPosts,ratings,title,noPostMessage){var self=this;if(ratings=ratings||[],$state.params.flashMessage){var fm=$state.params.flashMessage;Flash.create(fm.style,fm.msg,3500)}posts.forEach(function(post){for(post.following={count:0,is:!1},post.rating=0,post.description=PostService.filterDesc(post.description),i=0;i<followingCount.length;i++)if(followingCount[i].pid===post.id){post.following.count=followingCount[i].count;break}for(following.includes(post.id)&&(post.following.is=!0),i=0;i<ratings.length;i++)ratings[i].pid===post.id&&(post.rating=ratings[i].rating)}),self.emptyMsg=noPostMessage,self.posts=posts,self.title=title,self.following=following,self.likedPosts=likedPosts||[],self.sortType="date",self.sortReverse=!0,self.searchPost="",self.filterType="",self.doFollowing=function(pid){var i=null;self.posts.forEach(function(post,index){post.id!=pid||(i=index)});var bool=!self.posts[i].following.is;PostService.setFollowing(pid,bool).then(function(){self.posts[i].following.is=bool,bool?self.posts[i].following.count++:self.posts[i].following.count--},function(response){console.log(response)})},self.doLike=function(pid){var err=function(response){console.log(response)};UserService.isAuthenticated().then(function(reponse){var i=null;self.posts.forEach(function(post,index){post.id!=pid||(i=index)});var bool=!self.likedPosts.includes(pid);PostService.like(pid,bool).then(function(response){bool?(self.posts[i].likesCount++,self.likedPosts.push(pid)):(self.posts[i].likesCount--,self.likedPosts.splice(self.likedPosts.indexOf(pid),1))},err)},err)},self.getStarRange=function(avg){var arr=Array(Math.floor(avg));for(i=0;i<arr.length;i++)arr[i]=i;return arr}}),app.controller("CreatePostController",["$state","PostService","TagService",function($state,PostService,TagService){var self=this;self.showPreview=!1,self.submitted=!1,self.postTypes=[{id:"G",name:"General",value:"GENERAL"},{id:"Q",name:"Question",value:"QUESTION"},{id:"A",name:"Advice",value:"ADVICE"},{id:"R",name:"Review",value:"REVIEW"}],self.formData={description:"*You* **can** use [markdown](https://guides.github.com/features/mastering-markdown/) when you make your description",type:self.postTypes[0].value,tags:[]},self.loadTags=function(query){return TagService.getAll().then(function(response){return response.data.filter(function(tag){return-1!=tag.name.toLowerCase().indexOf(query.toLowerCase())})})},self.processForm=function(){TagService.processTags(self.formData.tags).then(function(response){return response.data}).then(function(tags){return self.formData.tags=tags,PostService.create(self.formData)}).then(function(response){if(null!=self.fileToUpload){var post=response.data,imgData=new FormData;return imgData.append("file",self.fileToUpload),PostService.uploadImg(post.id,imgData)}}).then(function(response){console.log(response),$state.transitionTo("index",{flashMessage:{style:"success",msg:"Post successfully created!"}},{reload:!0})})}}]),app.controller("EditPostController",["$state","PostService","TagService","post",function($state,PostService,TagService,post){var self=this;self.showPreview=!1,self.submitted=!1,self.postTypes=[{id:"G",name:"General",value:"GENERAL"},{id:"Q",name:"Question",value:"QUESTION"},{id:"A",name:"Advice",value:"ADVICE"},{id:"R",name:"Review",value:"REVIEW"}],self.formData={id:post.id,title:post.title,type:self.postTypes[self.postTypes.findIndex(function(type){return type.value===post.type})].value,description:post.description,assetUrl:post.assetUrl,tags:post.tags},self.asset=post.assetUrl,self.loadTags=function(query){return TagService.getAll().then(function(response){return response.data.filter(function(tag){return-1!=tag.name.toLowerCase().indexOf(query.toLowerCase())})})},self.processForm=function(){TagService.processTags(self.formData.tags).then(function(response){return response.data}).then(function(tags){return self.formData.tags=tags,PostService.update(self.formData)}).then(function(response){if(null!=self.fileToUpload){var post=response.data,imgData=new FormData;return imgData.append("file",self.fileToUpload),PostService.uploadImg(post.id,imgData)}}).then(function(response){console.log(response),$state.transitionTo("post",{pid:post.id,flashMessage:{style:"success",msg:"Updated Successfully"}},{reload:!0})})}}]),app.controller("LoginController",["$state","Flash","UserService",function($state,Flash,UserService){var self=this;if(self.cred={},$state.params.flashMessage){var fm=$state.params.flashMessage;Flash.create(fm.style,fm.msg,3500)}self.submitLogin=function(){var username=self.cred.u,password=self.cred.p;UserService.login(username,password).then(function(data){UserService.setAuth(!0,username),$state.transitionTo("index",{flashMessage:{style:"success",msg:"Successful login! Welcome!"}},{reload:!0})},function(data){Flash.create("danger","<strong>Uh oh!</strong> There was a problem with the credentials you provided",2e3,{class:"custom-flash"},!0);console.log(data)})}}]),app.controller("RegistrationController",["$state","UserService","PostalService",function($state,UserService,PostalService){var self=this;self.onYuuChange=function(){PostalService.doesRegionExist(self.reg.region.yuu).then(function(data){data?(self.registrationForm.yuu.$setValidity("validRegion",!0),self.onBinChange()):self.registrationForm.yuu.$setValidity("validRegion",!1)},function(){self.registrationForm.yuu.$setValidity("validRegion",!1)})},self.onBinChange=function(){self.registrationForm.yuu.$valid&&PostalService.getRegionData(self.reg.region.yuu,self.reg.region.bin).then(function(data){self.registrationForm.bin.$setValidity("validRegion",!0)},function(response){self.registrationForm.bin.$setValidity("validRegion",!1)})},self.submitRegistration=function(){self.reg.err={},PostalService.getRegionData(self.reg.region.yuu,self.reg.region.bin).then(function(data){return{postCode:data.post_code,prefecture:data.prefecture,city:data.city,area:data.town,prefectureJP:data.perfecture_jp,cityJP:data.jp_add_1,areaJP:data.jp_add_2}}).then(function(regionData){return self.reg.regionData=regionData,UserService.registerNewUser(self.reg)}).then(function(response){$state.transitionTo("login",{flashMessage:{style:"success",msg:"Registration was a success! Please sign-in using the form below"}},{reload:!0})},function(response){var errs=response.data;for(var e in errs)errs.hasOwnProperty(e)&&(self.reg.err[e]=errs[e])})}}]),app.controller("ViewSinglePostController",function($state,$rootScope,PostService,CommentService,ModalService,RatingService,post,comments,isFollowing,ratingData,doesLike){var self=this;self.post=post,self.post.comments=comments,self.post.rating=ratingData,self.isFollowing=isFollowing,self.doesLike=doesLike,self.isEditable=$rootScope.user==self.post.owner.username,self.postComment=function(){self.newComment.details=self.newComment.details.replace(/\r?\n/g,"<br/>"),CommentService.post(self.newComment,self.post.id).then(function(response){}).then(function(response){return PostService.getComments(self.post.id)}).then(function(response){self.post.comments=response.data,self.newComment={},self.commentForm.$setPristine()})},self.deletePost=function(pid){ModalService.show({},{closeButtonText:"CANCEL",actionButtonText:"DELETE",headerText:"Delete Post?",bodyText:"Are you sure you want to delete your post?"}).then(function(){PostService.delete(pid).then(function(response){$state.transitionTo("index",{flashMessage:{style:"warning",msg:"Post ["+self.post.title+"] has been deleted"}},{reload:!0})})},function(result){})},self.deleteComment=function(pid,cid){ModalService.show({},{closeButtonText:"CANCEL",actionButtonText:"DELETE",headerText:"Delete Comment",bodyText:"Are you sure you want to delete your comment?"}).then(function(){CommentService.delete(pid,cid).then(function(response){return PostService.getComments(self.post.id)}).then(function(response){self.post.comments=response.data})},function(result){})},self.getStarRange=function(){var arr=Array(Math.floor(self.post.rating.average));for(i=0;i<arr.length;i++)arr[i]=i;return arr},self.doRating=function(){fnRatePost=function(rating){return RatingService.rate(self.post.id,rating)},fnUpdateRating=function(){return RatingService.getAverage(self.post.id).then(function(response){self.post.rating=response.data})},modalDefaults={controller:function($scope,$uibModalInstance){$scope.modalOptions={text:{cancel:"Cancel"}},$scope.modalOptions.rate=function(result){$uibModalInstance.close(result)},$scope.modalOptions.close=function(result){$uibModalInstance.dismiss("cancel")}},templateUrl:"/components/modal-template-rating.html"},ModalService.show(modalDefaults,{closeButtonText:"CANCEL",actionButtonText:"DELETE",headerText:"Delete Comment",bodyText:"Are you sure you want to delete your comment?"}).then(fnRatePost,function(result){}).then(fnUpdateRating,function(result){})},self.doFollowing=function(){PostService.setFollowing(self.post.id,!self.isFollowing).then(function(){self.isFollowing=!self.isFollowing},function(response){console.log(response)})},self.doLike=function(){PostService.like(self.post.id,!self.doesLike).then(function(){self.doesLike=!self.doesLike},function(response){console.log(response)})},self.showImage=function(){var fnEmpty=function(){},template='<div class="modal-body"> <img src="'+self.post.assetUrl+'" class="single-img" /> </div>';ModalService.show({template:template,backdrop:!0},{}).then(fnEmpty,fnEmpty)}}),app.controller("ViewUserController",function(marked,PostService,user,posts){self=this,self.user=user,self.posts=posts,self.posts.forEach(function(post){post.description=PostService.filterDesc(post.description)}),self.locationImg=function(){return"https://maps.googleapis.com/maps/api/staticmap?center="+(self.user.region.city.split(" ").join("+")+",")+(self.user.region.prefecture.split(" ").join("+")+",")+"Japan&zoom=13&size=600x300&maptype=roadmap"}}),app.controller("UpdateUserController",function(Flash,UserService,PostService,ModalService,user,posts){self=this,self.user=user,self.posts=posts,self.posts.forEach(function(post){post.description=PostService.filterDesc(post.description)}),self.locationImg=function(){return"https://maps.googleapis.com/maps/api/staticmap?center="+(self.user.region.city.split(" ").join("+")+",")+(self.user.region.prefecture.split(" ").join("+")+",")+"Japan&zoom=13&size=600x300&maptype=roadmap"},self.updatePassword=function(){fnHandleSuccess=function(response){Flash.create("success","<strong>Success!</strong> Your password has been changed",2e3,{container:"flash-fixed",class:"custom-flash"},!0);self.passForm.$dirty=!1,self.passForm.newpassword.$dirty=!1,self.passForm.newpassconf.$dirty=!1,self.new.password="",self.new.passconf=""},fnHandleFail=function(response){console.log(response);Flash.create("danger","<strong>Uh oh!</strong> Something went while trying to update your password",2e3,{container:"flash-fixed",class:"custom-flash"},!0)},UserService.updatePassword(self.new.password,self.new.passconf).then(fnHandleSuccess,fnHandleFail)},self.filterDesc=function(markdown){return marked(markdown).replace(/(<([^>]+)>)/gi,"").split(" ").slice(0,20).join(" ").slice(0,-1)},self.deletePost=function(pid){ModalService.show({},{closeButtonText:"CANCEL",actionButtonText:"DELETE",headerText:"Delete Post?",bodyText:"Are you sure you want to delete your post?"}).then(function(){PostService.delete(pid).then(function(response){for(i=0;i<self.posts.length;i++)self.posts[i].id==pid&&self.posts.splice(self.posts.indexOf(i),1)})},function(result){})}}),app.service("CommentService",function($http,$q){return{post:function(comment,pid){return $http.post("/api/posts/"+pid+"/comments",comment,{headers:{"Content-Type":"application/json"}})},delete:function(pid,cid){return $http.delete("/api/posts/"+pid+"/comments/"+cid,{headers:{"Content-Type":"application/json"}})}}}),app.service("PostService",function($http,$location,$state,$q,marked){return{getPost:function(id){return $http.get("/api/posts/"+id)},getAllByType:function(type){return $http.get("/api/posts/type/"+type).then(function(response){return response.data})},getAll:function(){return $http.get("/api/posts").then(function(response){return response.data})},getComments:function(id){return $http.get("/api/posts/"+id+"/comments")},getFollowCount:function(){return $http.get("/api/posts/follow/count")},create:function(data){return $http.post("/api/posts",data,{headers:{"Content-Type":"application/json"}})},uploadImg:function(pid,img){return $http.post("/api/posts/upload/"+pid,img,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})},update:function(data,img){return $http.put("/api/posts/"+data.id,data,{headers:{"Content-Type":"application/json"}})},delete:function(pid){return $http.delete("/api/posts/"+pid,{headers:{"Content-Type":"application/json"}})},setFollowing:function(pid,bool){return $http({method:bool?"POST":"DELETE",url:"/api/user/follow/"+pid})},isFollowing:function(pid){return $http.get("/api/user/follow/"+pid)},doesLikePost:function(pid,username){return $http.get("/api/posts/"+pid+"/like/"+username)},like:function(pid,bool){return $http({method:bool?"POST":"DELETE",url:"/api/posts/"+pid+"/like"})},filterDesc:function(markdown){var text=marked(markdown).replace(/(<([^>]+)>)/gi,""),desc=text.split(" ").slice(0,20);return desc=desc.length<20?text.split("").slice(0,20).join("").slice(0,-1):desc.join(" ").slice(0,-1)}}}),app.service("TagService",function($http){return{getAll:function(){return $http.get("/api/tags",{headers:{"Content-Type":"application/json"}})},processTags:function(tags){return tagStrArr=[],tags.forEach(function(t){tagStrArr.push(t.name)}),$http.post("/api/tags/process",tagStrArr,{headers:{"Content-Type":"application/json"}})},getPosts:function(tagName){return $http.get("/api/tags/"+tagName+"/posts")}}}),app.service("UserService",function($http,$rootScope,$q){return $rootScope.authInit=!1,{init:function(){return $http.get("/api/user/me").then(function(response){$rootScope.authenticated=!0,$rootScope.user=response.data.username},function(data){$rootScope.authenticated=!1,$rootScope.user=null}).finally(function(){$rootScope.authInit=!0})},isAuthenticated:function(){return $rootScope.authInit?$rootScope.authenticated?$q.when():$q.reject("user not authorized"):$http.get("/api/user/me")},setAuth:function(auth,user){$rootScope.authenticated=auth,$rootScope.user=user},getUsername:function(){return $rootScope.user},getFollowedPosts:function(){return $http.get("/api/user/follow")},getUser:function(username){return $http.get("/api/user/"+username)},getMe:function(){return $http.get("/api/user/me")},getLikedPostIDs:function(){return $rootScope.authenticated?$http.get("/api/user/me/like"):$q.when([])},getPosts:function(username){return $http.get("/api/user/"+username+"/posts")},updatePassword:function(password,passconf){return $http.post("/api/user/update",{password:password,passconf:passconf},{headers:{"Content-Type":"application/json"}})},registerNewUser:function(data){return $http({method:"POST",url:"/api/user/register",data:{username:data.username,password:data.password,passconf:data.passconf,region:data.regionData},headers:{"Content-Type":"application/json"}})},login:function(username,password){return $http({method:"POST",url:"/api/login",data:{u:username,p:password},transformRequest:function(obj){var str=[];for(var p in obj)str.push(encodeURIComponent(p)+"="+encodeURIComponent(obj[p]));return str.join("&")},headers:{"Content-Type":"application/x-www-form-urlencoded"},responseType:"text"})},logout:function(){return $http.get("/api/logout")}}}),app.service("RatingService",["$http","$q",function($http,$q){return{rate:function(pid,rating){return $http.post("/api/rating/"+pid,rating,{headers:{"Content-Type":"application/json"}})},getAverage:function(pid){return $http.get("/api/rating/"+pid)},getAll:function(){return $http.get("/api/rating")}}}]),app.service("PostalService",["$http","$q",function($http,$q){var fnReturnTrue=function(){return!0},fnReturnFalse=function(){return!1},fnReject=function(response){return $q.reject(response)};return{doesRegionExist:function(postPart){return $http.get("/assets/data/postal/"+postPart+".json").then(fnReturnTrue,fnReturnFalse)},getRegionData:function(yuu,bin){return $http.get("/assets/data/postal/"+yuu+".json").then(function(response){var postData=response.data,postcode=yuu+bin;return postData.hasOwnProperty(postcode)?postData[postcode]:fnReject("no data for: "+postcode)},fnReject)}}}]),app.service("ModalService",["$uibModal",function($modal){var modalDefaults={backdrop:"static",keyboard:!0,modalFade:!0,templateUrl:"/components/modal-template.html"},modalOptions={closeButtonText:"Close",actionButtonText:"OK",headerText:"Proceed?",bodyText:"Perform this action?"};this.show=function(customModalDefaults,customModalOptions){customModalDefaults||(customModalDefaults={});var tempModalDefaults={},tempModalOptions={};return angular.extend(tempModalDefaults,modalDefaults,customModalDefaults),angular.extend(tempModalOptions,modalOptions,customModalOptions),tempModalDefaults.controller||(tempModalDefaults.controller=function($scope,$uibModalInstance){$scope.modalOptions=tempModalOptions,$scope.modalOptions.ok=function(result){$uibModalInstance.close(result)},$scope.modalOptions.close=function(result){$uibModalInstance.dismiss("cancel")}}),$modal.open(tempModalDefaults).result}}]);